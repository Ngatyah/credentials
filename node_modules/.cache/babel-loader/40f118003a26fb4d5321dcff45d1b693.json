{"ast":null,"code":"var _jsxFileName = \"/home/ngatyah/JAVASCRIPT/cridentials/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const authCxt = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  }); // useEffect(() => {\n  //   console.log(\"Mic test\")\n  //   setFormIsValid(\n  //     enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //   );\n  // }, [setFormIsValid, enteredEmail, enteredPassword])\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(enteredPassword.value.trim().length > 6 && emailState.isValid.includes('@'));\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      authCxt.onLogin(emailState.value, enteredPassword);\n    } else if (!emailState.isValid) {\n      emailInputRef.current.focus();\n    } else {\n      passwordInputRef.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: emailInputRef,\n        id: \"email\",\n        label: \"Email\",\n        type: \"text\",\n        isValid: emailState.isValid,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler,\n        value: emailState.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: passwordInputRef,\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: enteredPassword,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"PUeOHq+38WHbOVhfWljTqqZ3vdc=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/ngatyah/JAVASCRIPT/cridentials/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","classes","Button","AuthContext","Input","emailReducer","state","action","type","value","val","isValid","includes","Login","props","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","authCxt","emailInputRef","passwordInputRef","emailState","dispatchEmail","emailChangeHandler","event","target","passwordChangeHandler","trim","length","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","current","focus","login","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input';\n\n\nconst emailReducer = (state, action) => {\n\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.includes('@') };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: action.val.includes('@') }\n  }\n  return { value: '', isValid: false }\n};\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const authCxt = useContext(AuthContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, { value: '', isValid: false });\n\n  // useEffect(() => {\n  //   console.log(\"Mic test\")\n  //   setFormIsValid(\n  //     enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //   );\n  // }, [setFormIsValid, enteredEmail, enteredPassword])\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: 'USER_INPUT', val: event.target.value });\n\n\n\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    setFormIsValid(\n      enteredPassword.value.trim().length > 6 && emailState.isValid.includes('@')\n    );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: 'INPUT_BLUR' })\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (formIsValid) {\n      authCxt.onLogin(emailState.value, enteredPassword);\n    }\n    else if (!emailState.isValid) {\n      emailInputRef.current.focus();\n    } else {\n      passwordInputRef.current.focus();\n\n    }\n\n\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        {/* Refactoring login inputs */}\n\n        <Input\n          ref={emailInputRef}\n          id='email'\n          label='Email'\n          type='text'\n          isValid={emailState.isValid}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n          value={emailState.value}\n        />\n        <Input\n          ref={passwordInputRef}\n          id='password'\n          label='Password'\n          type='password'\n          isValid={passwordIsValid}\n          value={enteredPassword}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n\n        />\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}